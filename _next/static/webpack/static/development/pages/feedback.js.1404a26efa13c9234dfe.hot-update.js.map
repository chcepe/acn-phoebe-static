{"version":3,"file":"static/webpack/static\\development\\pages\\feedback.js.1404a26efa13c9234dfe.hot-update.js","sources":["webpack:///./pages/feedback.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../static/css/feedback.css\";\r\nimport { Transition, Spring } from \"react-spring\";\r\nimport { isAbsolute } from \"path\";\r\nimport VideoCover from \"react-video-cover\";\r\nimport PageLayout from \"../components/PageLayout\";\r\n\r\nclass index extends Component {\r\n  state = { showBot: false };\r\n  render() {\r\n    const { showBot } = this.state;\r\n    return (\r\n      <PageLayout title=\"Phoebe Survey\">\r\n        <style jsx global>{`\r\n          body {\r\n            overflow: hidden !important;\r\n          }\r\n        `}</style>\r\n        <Spring\r\n          delay={3000}\r\n          from={{\r\n            transform: \"scale(2)\",\r\n            display: \"block\",\r\n            opacity: 1,\r\n            msFilter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\",\r\n            filter: \"alpha((opacity = 100))\",\r\n            MozOpacity: 1,\r\n            KhtmlOpacity: 1\r\n          }}\r\n          to={{\r\n            transform: \"scale(1)\",\r\n            display: \"none\",\r\n            opacity: 0,\r\n            msFilter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\",\r\n            filter: \"alpha((opacity = 0))\",\r\n            MozOpacity: 0,\r\n            KhtmlOpacity: 0\r\n          }}\r\n        >\r\n          {styles => <div style={styles} className=\"loading\" />}\r\n        </Spring>\r\n        <div className=\"bot-page\">\r\n          <div className=\"vid-bg\">\r\n            <Spring\r\n              delay={3500}\r\n              from={{\r\n                transform: \"scale(2)\",\r\n                opacity: 0\r\n              }}\r\n              to={{\r\n                transform: \"scale(1)\",\r\n                opacity: 1\r\n              }}\r\n            >\r\n              {styles => (\r\n                <VideoCover\r\n                  style={styles}\r\n                  videoOptions={{\r\n                    autoPlay: true,\r\n                    muted: true,\r\n                    loop: true,\r\n                    src: \"../static/videos/tech-network-loop.mp4\"\r\n                  }}\r\n                />\r\n              )}\r\n            </Spring>\r\n          </div>\r\n          <Spring\r\n            delay={3000}\r\n            from={{\r\n              transform: \"scale(0.7)\",\r\n              opacity: 0\r\n            }}\r\n            to={{\r\n              transform: \"scale(1)\",\r\n              opacity: 1\r\n            }}\r\n          >\r\n            {styles => (\r\n              <div className=\"message\" style={styles}>\r\n                <p>\r\n                  <h3 className=\"fw-bold\">\r\n                    THANK YOU FOR ATTENDING THE SESSION\r\n                  </h3>\r\n                </p>\r\n                <p>\r\n                  Before you go, we would like to get your feedback on this\r\n                  training. <br />\r\n                  Kindly click the chathead to start the feedback session.\r\n                </p>\r\n                <hr size=\"1\" />\r\n                <p>\r\n                  <small>\r\n                    For questions and concerns, feel free to reach out to:\r\n                    <br />\r\n                    arnold.j.c.alabastro@accenture.com\r\n                    <br />\r\n                    jose.mari.c.abesamis@accenture.com\r\n                  </small>\r\n                </p>\r\n                <img className=\"logo\" src=\"../static/images/logo.png\" />\r\n                <img className=\"robot\" src=\"../static/images/robot.png\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n          <Spring\r\n            from={{\r\n              opacity: showBot ? 1 : 0\r\n              // display: showBot ? \"block\" : \"none\"\r\n            }}\r\n            to={{\r\n              opacity: showBot ? 1 : 0\r\n              // display: showBot ? \"block\" : \"none\"\r\n            }}\r\n          >\r\n            {styles => (\r\n              <div className=\"chatbot-wrapper\" style={styles}>\r\n                <Spring\r\n                  from={{\r\n                    width: showBot ? 10 : 300,\r\n                    height: showBot ? 10 : 400\r\n                  }}\r\n                  to={{\r\n                    width: showBot ? 400 : 10,\r\n                    height: showBot ? 500 : 10\r\n                  }}\r\n                >\r\n                  {styles => (\r\n                    <div className=\"bot-window\" style={styles}>\r\n                      <iframe src=\"../static/bot.html\" />\r\n                    </div>\r\n                  )}\r\n                </Spring>\r\n              </div>\r\n            )}\r\n          </Spring>\r\n          <Spring\r\n            delay={3000}\r\n            from={{\r\n              position: \"absolute\",\r\n              opacity: 1,\r\n              width: 300,\r\n              height: 300,\r\n              right: 'calc(~\"100vh - 180px\")',\r\n              bottom: 'calc(~\"100vh - 180px\")'\r\n            }}\r\n            to={{\r\n              opacity: 1,\r\n              width: 80,\r\n              height: 80,\r\n              right: 20,\r\n              bottom: 20\r\n            }}\r\n          >\r\n            {styles => (\r\n              <img\r\n                style={styles}\r\n                className=\"bot-avatar\"\r\n                src=\"../static/images/avatar.png\"\r\n                onClick={() =>\r\n                  this.setState(prevState => ({ showBot: !prevState.showBot }))\r\n                }\r\n              />\r\n            )}\r\n          </Spring>\r\n        </div>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;;;;;;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AA4BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAZA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;;;;AAjKA;AACA;AAmKA;;;;A","sourceRoot":""}