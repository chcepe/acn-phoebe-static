{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.39cf6ac0e12f84ce1db0.hot-update.js","sources":["webpack:///./components/Home/Section3.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Image,\r\n  Icon,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Item,\r\n  Label,\r\n  Modal,\r\n  Segment,\r\n  TransitionablePortal\r\n} from \"semantic-ui-react\";\r\nimport announcements from \"./announcements\";\r\n\r\nconst instructors = [\r\n  {\r\n    name: \"Jomar Abesamis\",\r\n    email: \"jose.mari.c.abesamis@accenture.com\",\r\n    position: \"AI Capability Lead\",\r\n    image: \"../static/images/instructors/jomar.png\"\r\n  },\r\n  {\r\n    name: \"Arnold Alabastro\",\r\n    email: \"arnold.j.c.alabastro@accenture.com\",\r\n    position: \"AI M&O Manager\",\r\n    image: \"../static/images/instructors/arn.png\"\r\n  },\r\n  {\r\n    name: \"Michael Camba\",\r\n    email: \"michael.a.t.camba@accenture.com\",\r\n    position: \"Instructor, Demystifying AI, AI Hackathon\",\r\n    image: \"/static/images/instructors/chammy.png\"\r\n  },\r\n  {\r\n    name: \"Ervin Jon Abril\",\r\n    email: \"ervin.jon.a.abril@accenture.com\",\r\n    position: \"Instructor, AI Engineering School\",\r\n    image: \"/static/images/instructors/ej.png\"\r\n  }\r\n];\r\n\r\nclass Section2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      annOpen: false,\r\n      annTitle: \"\",\r\n      annContent: \"\",\r\n      annButton: \"\",\r\n      annLink: \"\"\r\n    };\r\n  }\r\n  _breakLine = text => {\r\n    var br = React.createElement(\"br\");\r\n    var regex = /(<br \\/>)/g;\r\n    return text.split(regex).map(function(line, index) {\r\n      return line.match(regex) ? <br key={\"key_\" + index} /> : line;\r\n    });\r\n  };\r\n  _announcement = (title, content, button, link) => () => {\r\n    this.setState({\r\n      annOpen: true,\r\n      annTitle: title,\r\n      annContent: content,\r\n      annButton: button,\r\n      annLink: link\r\n    });\r\n  };\r\n  _closeAnnouncement = () => {\r\n    this.setState({ annOpen: false });\r\n  };\r\n  render() {\r\n    const { annOpen, annTitle, annContent, annButton, annLink } = this.state;\r\n    return (\r\n      <Container>\r\n        <Grid divided>\r\n          <Grid.Row columns={2}>\r\n            <Grid.Column width={10} className=\"announcements-wrapper\">\r\n              <Header as=\"h2\">Announcements</Header>\r\n              <Segment className=\"announcements\">\r\n                <Item.Group divided>\r\n                  {announcements.map(announcement => (\r\n                    <Item\r\n                      onClick={this._announcement(\r\n                        announcement.title,\r\n                        announcement.description,\r\n                        announcement.button.title,\r\n                        announcement.button.link\r\n                      )}\r\n                    >\r\n                      <Item.Content>\r\n                        <Item.Header as=\"a\">{announcement.title}</Item.Header>\r\n                        <Item.Extra>{announcement.description} </Item.Extra>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  ))}\r\n                </Item.Group>\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n              <Header as=\"h2\">AI Capability Team</Header>\r\n              <Item.Group divided className=\"instructors\">\r\n                {instructors.map(instructor => (\r\n                  <Item>\r\n                    <Item.Image src={instructor.image} />\r\n                    <Item.Content verticalAlign=\"middle\">\r\n                      <Item.Header>{instructor.name}</Item.Header>\r\n                      <Item.Meta>\r\n                        <span>{instructor.position}</span>\r\n                      </Item.Meta>\r\n                      <Item.Description>{instructor.email}</Item.Description>\r\n                    </Item.Content>\r\n                  </Item>\r\n                ))}\r\n              </Item.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <TransitionablePortal\r\n          open={annOpen}\r\n          transition={{ animation: \"scale\", duration: 300 }}\r\n        >\r\n          <Modal open={annOpen} onClose={this._closeAnnouncement} closeIcon>\r\n            <Modal.Header>{annTitle}</Modal.Header>\r\n            <Modal.Content>\r\n              <Modal.Description>\r\n                <p>{this._breakLine(annContent)}</p>\r\n                <a href={annLink} target=\"_blank\">\r\n                  <Button circular color=\"violet\">\r\n                    <Icon name=\"angle double right\" /> &nbsp; {annButton}\r\n                  </Button>\r\n                </a>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n          </Modal>\r\n        </TransitionablePortal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section2;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAcA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAjBA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AARA;AACA;AAlBA;AA2BA;AAAA;AAAA;AACA;AACA;AA3BA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAmBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAiBA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAjGA;AACA;AAmGA;;;;A","sourceRoot":""}